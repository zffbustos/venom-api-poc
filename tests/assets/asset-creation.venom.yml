name: Creating Assets using ZF API

vars:
  test_policy_id: 62395
  asset_policy_id: '{{.test_policy_id}}'
  asset_type_id: 5
  asset_status: "disabled"
  asset_protection_status: "disabled"

testcases:

  - name: get the list of policies from the ZF API using API token
    steps: 

      # Create random asset name
    
      - type: exec
        script: echo "asset_$((1 + RANDOM % 300))"
        vars:
          asset_name:
            from:
              result.systemout
        assertions:
          - result.code ShouldEqual 0
          - result.systemout ShouldContainSubstring asset

      # Generate the necessary tokens

      - type: http
        url: '{{.zfapi-url}}auth/token/'
        method: POST
        headers:
          Content-Type: application/json
        bodyFile: "{{.env-file-path}}"
        vars:
          access-token:
            from: result.bodyjson.access
        assertions:
          - result.statuscode MustEqual 200

      # Create the asset on the first policy on the list above

      - type: http
        url: '{{.zfapi-url}}/1.0/entities/'
        method: POST
        headers:
          Authorization: Bearer {{.access-token}}
          Content-Type: application/json; charset=UTF-8
        body: >-
          {
            "name": "{{.asset_name}}",
            "policy_id": "{{.asset_policy_id}}",
            "type_id": "{{.asset_type_id}}",
            "status": "{{.asset_status}}",
            "protection_status": "{{.asset_protection_status}}"
          }
        vars:
          asset_id: 
            from:
              result.bodyjson.id 
        assertions:
          - result.statuscode ShouldEqual 201
          - result.bodyjson ShouldContainKey id




